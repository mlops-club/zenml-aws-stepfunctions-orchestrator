[project]
name = "zenml-aws-stepfunctions-orchestrator"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "pulumi>=3.147.0",
    "pulumi-aws>=6.67.0",
    "zenml>=0.73.0",
    "aws-profile-manager>=0.7.3",
    "boto3>=1.36.3",
    "kubernetes>=32.0.0",
    "s3fs>2022.3.0",
    "sagemaker>=2.117.0",
]

# [tool.uv.workspace]
# members = ["infra/aws-cdk", "infra/pulumi", "infra/pulumi/sdks/zenml"]

[tool.uv.sources]
pulumi-zenml = { workspace = true }

[project.optional-dependencies]
test = ["pytest", "pytest-cov"]
static-code-qa = [
    "pre-commit",
    "pylint",
    "black",
    "isort",
    "flake8",
    "flake8-docstrings",
    "Flake8-pyproject",
    "radon",
]
# Installing dev depenendencies in your virtual env makes it so that during development VS Code can
# - surface linting errors
# - automatically apply formatting
# - show enhanced autocompletion for stubs libraries
# See .vscode/settings.json to see how VS Code is configured to use these tools
dev = ["zenml-aws-stepfunctions-orchestrator[test,static-code-qa,stubs]"]


##############################
# --- Code Quality Tools --- #
##############################

[tool.pytest.ini_options]
markers = ["slow: marks tests as slow (deselect with '-m \"not slow\"')"]

[tool.black]
line-length = 119
# regular expression ignoring multiple patterns separated by '|' and newlines
exclude = '''
/(
    \.venv
  | venv
)/
'''

[tool.flake8]
docstring-convention = "all"
ignore = [
    "D107",
    "D212",
    "E501",
    "W503",
    "W605",
    "D203",
    "D100",
    "R701",
    "D401",
    # D103: Missing docstring in public function
    "D103",
    # D101: Missing docstring in public class
    "D101",
    # D102: Missing docstring in public method
    "D102",
    # D104: Missing docstring in public package
    "D104",
    # D105: Missing docstring in magic method
    "D105",
    # D400: First line should end with a period
    "D400",
    # D415: First line should end with a period, question mark, or exclamation point
    "D415",
]
exclude = [".venv"]
max-line-length = 119

# radon
radon-max-cc = 10

[tool.isort]
profile = "black"
multi_line_output = "VERTICAL_HANGING_INDENT"
force_grid_wrap = 2
line_length = 119

[tool.pylint."messages control"]
disable = [
    "line-too-long",
    "trailing-whitespace",
    "missing-function-docstring",
    "consider-using-f-string",
    "import-error",
    "too-few-public-methods",
    "redefined-outer-name",
    "unused-argument",
    "inconsistent-return-statements",
    "unsupported-binary-operation",
    "unsubscriptable-object",
    "missing-module-docstring",
]
